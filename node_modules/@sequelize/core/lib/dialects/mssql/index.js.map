{
  "version": 3,
  "sources": ["../../../src/dialects/mssql/index.js"],
  "sourcesContent": ["'use strict';\n\nconst _ = require('lodash');\nconst { AbstractDialect } = require('../abstract');\nconst ConnectionManager = require('./connection-manager');\nconst Query = require('./query');\nconst QueryGenerator = require('./query-generator');\nconst DataTypes = require('../../data-types').mssql;\nconst { MSSqlQueryInterface } = require('./query-interface');\n\nclass MssqlDialect extends AbstractDialect {\n  static supports = _.merge(_.cloneDeep(AbstractDialect.supports), {\n    'DEFAULT VALUES': true,\n    'LIMIT ON UPDATE': true,\n    migrations: false,\n    returnValues: {\n      output: true,\n    },\n    schemas: true,\n    autoIncrement: {\n      identityInsert: true,\n      defaultValue: false,\n      update: false,\n    },\n    constraints: {\n      restrict: false,\n      default: true,\n    },\n    index: {\n      collate: false,\n      type: true,\n      using: false,\n      where: true,\n    },\n    NUMERIC: true,\n    tmpTableTrigger: true,\n  });\n\n  constructor(sequelize) {\n    super();\n    this.sequelize = sequelize;\n    this.connectionManager = new ConnectionManager(this, sequelize);\n    this.queryGenerator = new QueryGenerator({\n      _dialect: this,\n      sequelize,\n    });\n    this.queryInterface = new MSSqlQueryInterface(\n      sequelize,\n      this.queryGenerator,\n    );\n  }\n}\n\n// SQL Server 2017 Express (version 14), minimum supported version, all the way\n// up to the most recent version. When increasing this version, remember to\n// update also the minimum version in the documentation at\n//   docs/manual/other-topics/dialect-specific-things.md\n// and set the relevant years for the mssql Docker images in the ci.yml file at\n//   .github/workflows/ci.yml\nMssqlDialect.prototype.defaultVersion = '14.0.1000';\nMssqlDialect.prototype.Query = Query;\nMssqlDialect.prototype.name = 'mssql';\nMssqlDialect.prototype.TICK_CHAR = '\"';\nMssqlDialect.prototype.TICK_CHAR_LEFT = '[';\nMssqlDialect.prototype.TICK_CHAR_RIGHT = ']';\nMssqlDialect.prototype.DataTypes = DataTypes;\n\nmodule.exports = MssqlDialect;\n"],
  "mappings": ";AAEA,MAAM,IAAI,QAAQ;AAClB,MAAM,EAAE,oBAAoB,QAAQ;AACpC,MAAM,oBAAoB,QAAQ;AAClC,MAAM,QAAQ,QAAQ;AACtB,MAAM,iBAAiB,QAAQ;AAC/B,MAAM,YAAY,QAAQ,oBAAoB;AAC9C,MAAM,EAAE,wBAAwB,QAAQ;AAExC,2BAA2B,gBAAgB;AAAA,SAClC,WAAW,EAAE,MAAM,EAAE,UAAU,gBAAgB,WAAW;AAAA,IAC/D,kBAAkB;AAAA,IAClB,mBAAmB;AAAA,IACnB,YAAY;AAAA,IACZ,cAAc;AAAA,MACZ,QAAQ;AAAA;AAAA,IAEV,SAAS;AAAA,IACT,eAAe;AAAA,MACb,gBAAgB;AAAA,MAChB,cAAc;AAAA,MACd,QAAQ;AAAA;AAAA,IAEV,aAAa;AAAA,MACX,UAAU;AAAA,MACV,SAAS;AAAA;AAAA,IAEX,OAAO;AAAA,MACL,SAAS;AAAA,MACT,MAAM;AAAA,MACN,OAAO;AAAA,MACP,OAAO;AAAA;AAAA,IAET,SAAS;AAAA,IACT,iBAAiB;AAAA;AAAA,EAGnB,YAAY,WAAW;AACrB;AACA,SAAK,YAAY;AACjB,SAAK,oBAAoB,IAAI,kBAAkB,MAAM;AACrD,SAAK,iBAAiB,IAAI,eAAe;AAAA,MACvC,UAAU;AAAA,MACV;AAAA;AAEF,SAAK,iBAAiB,IAAI,oBACxB,WACA,KAAK;AAAA;AAAA;AAWX,aAAa,UAAU,iBAAiB;AACxC,aAAa,UAAU,QAAQ;AAC/B,aAAa,UAAU,OAAO;AAC9B,aAAa,UAAU,YAAY;AACnC,aAAa,UAAU,iBAAiB;AACxC,aAAa,UAAU,kBAAkB;AACzC,aAAa,UAAU,YAAY;AAEnC,OAAO,UAAU;",
  "names": []
}
