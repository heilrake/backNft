{
  "version": 3,
  "sources": ["../../../src/dialects/ibmi/index.js"],
  "sourcesContent": ["'use strict';\n\nconst _ = require('lodash');\nconst { AbstractDialect } = require('../abstract');\nconst ConnectionManager = require('./connection-manager');\nconst Query = require('./query');\nconst { QueryGenerator } = require('./query-generator');\nconst { IBMiQueryInterface } = require('./query-interface');\nconst DataTypes = require('../../data-types').ibmi;\n\nclass IBMiDialect extends AbstractDialect {\n\n  static supports = _.merge(\n    _.cloneDeep(AbstractDialect.supports),\n    {\n      'VALUES ()': true,\n      'ON DUPLICATE KEY': false,\n      transactions: false,\n\n      bulkDefault: true,\n      index: {\n        using: false,\n        where: true,\n        functionBased: true,\n        collate: false,\n      },\n      constraints: {\n        onUpdate: false,\n      },\n      groupedLimit: false,\n      JSON: false,\n      upserts: false,\n      schemas: true,\n    },\n  );\n\n  constructor(sequelize) {\n    super();\n    this.sequelize = sequelize;\n    this.connectionManager = new ConnectionManager(this, sequelize);\n    this.queryGenerator = new QueryGenerator({\n      _dialect: this,\n      sequelize,\n    });\n    this.queryInterface = new IBMiQueryInterface(this.sequelize, this.queryGenerator);\n  }\n}\n\nIBMiDialect.prototype.defaultVersion = '7.3.0';\nIBMiDialect.prototype.Query = Query;\nIBMiDialect.prototype.DataTypes = DataTypes;\nIBMiDialect.prototype.name = 'ibmi';\nIBMiDialect.prototype.TICK_CHAR = '\"';\nIBMiDialect.prototype.TICK_CHAR_LEFT = IBMiDialect.prototype.TICK_CHAR;\nIBMiDialect.prototype.TICK_CHAR_RIGHT = IBMiDialect.prototype.TICK_CHAR;\n\nmodule.exports = IBMiDialect;\nmodule.exports.IBMiDialect = IBMiDialect;\nmodule.exports.default = IBMiDialect;\n"],
  "mappings": ";AAEA,MAAM,IAAI,QAAQ;AAClB,MAAM,EAAE,oBAAoB,QAAQ;AACpC,MAAM,oBAAoB,QAAQ;AAClC,MAAM,QAAQ,QAAQ;AACtB,MAAM,EAAE,mBAAmB,QAAQ;AACnC,MAAM,EAAE,uBAAuB,QAAQ;AACvC,MAAM,YAAY,QAAQ,oBAAoB;AAE9C,0BAA0B,gBAAgB;AAAA,SAEjC,WAAW,EAAE,MAClB,EAAE,UAAU,gBAAgB,WAC5B;AAAA,IACE,aAAa;AAAA,IACb,oBAAoB;AAAA,IACpB,cAAc;AAAA,IAEd,aAAa;AAAA,IACb,OAAO;AAAA,MACL,OAAO;AAAA,MACP,OAAO;AAAA,MACP,eAAe;AAAA,MACf,SAAS;AAAA;AAAA,IAEX,aAAa;AAAA,MACX,UAAU;AAAA;AAAA,IAEZ,cAAc;AAAA,IACd,MAAM;AAAA,IACN,SAAS;AAAA,IACT,SAAS;AAAA;AAAA,EAIb,YAAY,WAAW;AACrB;AACA,SAAK,YAAY;AACjB,SAAK,oBAAoB,IAAI,kBAAkB,MAAM;AACrD,SAAK,iBAAiB,IAAI,eAAe;AAAA,MACvC,UAAU;AAAA,MACV;AAAA;AAEF,SAAK,iBAAiB,IAAI,mBAAmB,KAAK,WAAW,KAAK;AAAA;AAAA;AAItE,YAAY,UAAU,iBAAiB;AACvC,YAAY,UAAU,QAAQ;AAC9B,YAAY,UAAU,YAAY;AAClC,YAAY,UAAU,OAAO;AAC7B,YAAY,UAAU,YAAY;AAClC,YAAY,UAAU,iBAAiB,YAAY,UAAU;AAC7D,YAAY,UAAU,kBAAkB,YAAY,UAAU;AAE9D,OAAO,UAAU;AACjB,OAAO,QAAQ,cAAc;AAC7B,OAAO,QAAQ,UAAU;",
  "names": []
}
