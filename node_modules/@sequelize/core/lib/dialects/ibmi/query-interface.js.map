{
  "version": 3,
  "sources": ["../../../src/dialects/ibmi/query-interface.js"],
  "sourcesContent": ["'use strict';\n\nconst { Transaction } = require('../../transaction');\nconst { QueryInterface } = require('../abstract/query-interface');\n\n/**\n Returns an object that enables the `ibmi` dialect to call underlying odbc\n transaction functions through the connection methods instead\n\n @class QueryInterface\n @static\n @private\n */\n\nclass IBMiQueryInterface extends QueryInterface {\n\n  startTransaction(transaction, options) {\n    if (!(transaction instanceof Transaction)) {\n      throw new TypeError('Unable to start a transaction without transaction object!');\n    }\n\n    options = { ...options, transaction: transaction.parent || transaction };\n\n    options.transaction.name = transaction.parent ? transaction.name : undefined;\n\n    return transaction.connection.beginTransaction();\n  }\n\n  commitTransaction(transaction) {\n    if (!(transaction instanceof Transaction)) {\n      throw new TypeError('Unable to commit a transaction without transaction object!');\n    }\n\n    if (transaction.parent) {\n      throw new Error('Unable to commit a transaction that has a parent transaction!');\n    }\n\n    const promise = transaction.connection.commit();\n    transaction.finished = 'commit';\n\n    return promise;\n  }\n\n  rollbackTransaction(transaction, options) {\n    if (!(transaction instanceof Transaction)) {\n      throw new TypeError('Unable to rollback a transaction without transaction object!');\n    }\n\n    options = {\n      ...options,\n      transaction: transaction.parent || transaction,\n      supportsSearchPath: false,\n      completesTransaction: true,\n    };\n    options.transaction.name = transaction.parent ? transaction.name : undefined;\n\n    const promise = transaction.connection.rollback();\n    transaction.finished = 'commit';\n\n    return promise;\n  }\n}\n\nexports.IBMiQueryInterface = IBMiQueryInterface;\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAEA,MAAM,EAAE,gBAAgB,QAAQ;AAChC,MAAM,EAAE,mBAAmB,QAAQ;AAWnC,iCAAiC,eAAe;AAAA,EAE9C,iBAAiB,aAAa,SAAS;AACrC,QAAI,CAAE,wBAAuB,cAAc;AACzC,YAAM,IAAI,UAAU;AAAA;AAGtB,cAAU,iCAAK,UAAL,EAAc,aAAa,YAAY,UAAU;AAE3D,YAAQ,YAAY,OAAO,YAAY,SAAS,YAAY,OAAO;AAEnE,WAAO,YAAY,WAAW;AAAA;AAAA,EAGhC,kBAAkB,aAAa;AAC7B,QAAI,CAAE,wBAAuB,cAAc;AACzC,YAAM,IAAI,UAAU;AAAA;AAGtB,QAAI,YAAY,QAAQ;AACtB,YAAM,IAAI,MAAM;AAAA;AAGlB,UAAM,UAAU,YAAY,WAAW;AACvC,gBAAY,WAAW;AAEvB,WAAO;AAAA;AAAA,EAGT,oBAAoB,aAAa,SAAS;AACxC,QAAI,CAAE,wBAAuB,cAAc;AACzC,YAAM,IAAI,UAAU;AAAA;AAGtB,cAAU,iCACL,UADK;AAAA,MAER,aAAa,YAAY,UAAU;AAAA,MACnC,oBAAoB;AAAA,MACpB,sBAAsB;AAAA;AAExB,YAAQ,YAAY,OAAO,YAAY,SAAS,YAAY,OAAO;AAEnE,UAAM,UAAU,YAAY,WAAW;AACvC,gBAAY,WAAW;AAEvB,WAAO;AAAA;AAAA;AAIX,QAAQ,qBAAqB;",
  "names": []
}
